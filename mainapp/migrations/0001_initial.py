# Generated by Django 5.0 on 2024-05-03 13:38

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Actions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Callname",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="CasesDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ClientJobRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="RequestMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250, unique=True)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="RequestReason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250, unique=True)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Routine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.TimeField()),
                ("break_time", models.DurationField(blank=True, null=True)),
                ("end_time", models.TimeField()),
                (
                    "leave_type",
                    models.CharField(
                        choices=[("os", "OnSide"), ("or", "OnRemote")],
                        default="os",
                        max_length=2,
                    ),
                ),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Shift",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="VehicleType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="WorkLocations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("is_trash", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, default=None, max_length=254, null=True
                    ),
                ),
                ("is_employee", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "work_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.worklocations",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CasesActions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_stamp",
                    models.TimeField(default=datetime.time(13, 38, 25, 175147)),
                ),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.actions",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("job_grade", models.CharField(max_length=255)),
                ("head_office_name", models.CharField(max_length=255)),
                ("headquarter_name", models.CharField(max_length=255)),
                ("main_headquarter_name", models.CharField(max_length=255)),
                ("mobile", models.CharField(max_length=20)),
                ("birth_date", models.DateField()),
                ("UID", models.CharField(max_length=255, unique=True)),
                ("id_number", models.CharField(max_length=255, unique=True)),
                ("designation_date", models.DateField()),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "job_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.clientjobrole",
                    ),
                ),
                (
                    "work_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.worklocations",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanySecurityGuard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("nationality", models.CharField(max_length=200)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.company",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("number", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True, default=None, max_length=254, null=True
                    ),
                ),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "work_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.worklocations",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Duty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("status", models.CharField(max_length=255)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "duty_assigned_employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employee",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmployeeLeaves",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "leave_type",
                    models.CharField(
                        choices=[
                            ("sl", "SickLeave"),
                            ("cl", "CasualLeave"),
                            ("ol", "OthersLeave"),
                        ],
                        default="cl",
                        max_length=2,
                    ),
                ),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employee",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmployeeRoutine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employee",
                    ),
                ),
                (
                    "routine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.routine",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AttendenceLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_in", models.TimeField()),
                ("last_out", models.TimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("p", "Present"), ("a", "Absent")],
                        default="a",
                        max_length=2,
                    ),
                ),
                ("is_trash", models.BooleanField(default=False)),
                ("today_date", models.DateField(blank=True, null=True)),
                (
                    "employee_routine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employeeroutine",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_hq", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("ac", "Active"), ("in", "Inactive")],
                        default="ac",
                        max_length=2,
                    ),
                ),
                (
                    "client_city",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("request_date", models.DateField(default=django.utils.timezone.now)),
                ("request_time", models.TimeField(default=django.utils.timezone.now)),
                (
                    "corresponding_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("receive_date_time", models.DateTimeField(auto_now_add=True)),
                ("is_high_priority", models.BooleanField(blank=True, null=True)),
                ("requirement", models.TextField(blank=True, null=True)),
                ("attachments", models.TextField(blank=True, null=True)),
                (
                    "attachment_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("attachment_count", models.IntegerField(blank=True, null=True)),
                (
                    "consoles_request_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("result", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "action_on_system_a",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("request_id_on_system_a", models.IntegerField(blank=True, null=True)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "client_auto_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.client",
                    ),
                ),
                (
                    "duty",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="mainapp.duty"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employee",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "notes",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="mainapp.note"
                    ),
                ),
                (
                    "request_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.requestmethod",
                    ),
                ),
                (
                    "request_reason",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.requestreason",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.FileField(upload_to="files/")),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "request_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.request",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RequestAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                ("upload_date", models.DateField(auto_now_add=True)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "attachment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.attachment",
                    ),
                ),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.request",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RequestNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "note",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="mainapp.note"
                    ),
                ),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.request",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="routine",
            name="shift",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="mainapp.shift",
                unique=True,
            ),
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("plate_number", models.IntegerField()),
                ("plate_type", models.CharField(max_length=200)),
                ("vehicle_year", models.IntegerField()),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.vehicletype",
                    ),
                ),
                (
                    "plate_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.worklocations",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleFailures",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("report_number", models.CharField(max_length=200)),
                ("type", models.CharField(max_length=200)),
                ("details", models.TextField()),
                ("vehicle_replace", models.BooleanField(default=False)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.company",
                    ),
                ),
                (
                    "duty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.duty",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employee",
                    ),
                ),
                (
                    "employee_routine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employeeroutine",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.vehicle",
                    ),
                ),
                (
                    "case_city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.worklocations",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanyCases",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_number", models.CharField(max_length=200)),
                ("date_of_case", models.DateTimeField(auto_now_add=True)),
                ("time_of_case_receive", models.TimeField(default=datetime.time(0, 0))),
                ("zone", models.CharField(max_length=200)),
                ("case_summart", models.TextField()),
                ("comments", models.TextField()),
                ("type_of_case", models.CharField(max_length=200)),
                ("is_trash", models.BooleanField(default=False)),
                (
                    "actions",
                    models.ManyToManyField(blank=True, null=True, to="mainapp.actions"),
                ),
                (
                    "case_description",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.casesdescription",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.company",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "security_guard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.companysecurityguard",
                    ),
                ),
                (
                    "duty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.duty",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employee",
                    ),
                ),
                (
                    "employee_routine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employeeroutine",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.worklocations",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanyAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("milage_start_km", models.IntegerField(blank=True, null=True)),
                ("milage_finish_km", models.IntegerField(blank=True, null=True)),
                ("spend_time", models.IntegerField(blank=True, null=True)),
                ("comments", models.TextField()),
                ("is_trash", models.BooleanField(default=False)),
                ("actions", models.ManyToManyField(to="mainapp.actions")),
                (
                    "callname",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.callname",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.company",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "duty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.duty",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employee",
                    ),
                ),
                (
                    "employee_routine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.employeeroutine",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.vehicle",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mainapp.worklocations",
                    ),
                ),
            ],
        ),
    ]
